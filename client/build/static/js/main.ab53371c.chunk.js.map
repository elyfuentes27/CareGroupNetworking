{"version":3,"sources":["components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/layout/Spinner.js","components/dashboard/DashboardActions.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/routing/PrivateRoute.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","login","required","minLength","alerts","alert","useEffect","window","scrollTo","length","map","key","src","spinner","style","width","margin","display","alt","DashboardActions","getCurrentProfile","mssg","status","text","createProfile","history","edit","push","console","log","deleteExperience","delete","experience","experiences","exp","_id","company","title","format","from","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","confirm","user","Spinner","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","join","social","addExperience","put","current","description","toDateDisabled","toggleDisabled","disabled","cols","rows","addEducation","fieldofstudy","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","addLikes","removeLikes","deletePost","likes","comments","date","showActions","defaultProps","statusText","addPost","header","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","Component","component","rest","render","props","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ab53371c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.2d77c2db.gif\";","import uuid from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\n// we can do another arrow function after dispatch because of the thunk middleware\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n  const id = uuid.v4();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id }\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const GET_REPOS = 'GET_REPOS';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\nexport const GET_POSTS = 'GET_POSTS';\nexport const GET_POST = 'GET_POST';\nexport const POST_ERROR = 'POST_ERROR';\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\nexport const DELETE_POST = 'DELETE_POST';\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    // set Global header\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n//Load User\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n//REGISTER USER\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data // data we get back in this case it will be the token\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n//Login USER\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data // data we get back in this case it will be the token\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// Logout and will clear profile\nexport const logout = () => dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLinks = (\n    <ul>\n      <li>\n        <Link to='/profiles'>Members</Link>\n      </li>\n      <li>\n        <Link to='/posts'>Posts</Link>\n      </li>\n      <li>\n        <Link to='/dashboard'>\n          <i className='fas fa-user'></i>\n          {''}\n          <span className='hide-sm'> Dashboard</span>\n        </Link>\n      </li>\n      <li>\n        <a onClick={logout} href='#!'>\n          <i className='fas fa-sign-out-alt'></i>\n          {''}\n          <span className='hide-sm'> Logout</span>\n        </a>\n      </li>\n    </ul>\n  );\n\n  const guestLinks = (\n    <ul>\n      <li>\n        <Link to='/profiles'>Members</Link>\n      </li>\n      <li>\n        <Link to='/register'>Register</Link>\n      </li>\n      <li>\n        <Link to='/login'>Login</Link>\n      </li>\n    </ul>\n  );\n  return (\n    <nav className='navbar bg-dark'>\n      <h1>\n        <Link to='/'>\n          <i className='fas fa-code'></i> CareGroup App\n        </Link>\n      </h1>\n      {!loading && (\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n      )}\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst Landing = ({ isAuthenticated }) => {\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <section className='landing'>\n      <div className='dark-overlay'>\n        <div className='landing-inner'>\n          <h1 className='x-large'>Care Group APP</h1>\n          <p className='lead'>\n            Create a christian profile/portfolio, share posts and get help from\n            other christian friends\n          </p>\n          <div className='buttons'>\n            <Link to='/register' className='btn btn-primary'>\n              Sign Up\n            </Link>\n            <Link to='/login' className='btn btn-light'>\n              Login\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nLanding.propTypes = {\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  // Commenting this code since will do this in redux. this is just an example of making a call with axios\n  //   const onSubmit = async e => {\n  //     e.preventDefault();\n  //     if (password !== password2) {\n  //       console.log(\"Password does not match\");\n  //     } else {\n  //       const newUser = {\n  //         name,\n  //         email,\n  //         password\n  //       };\n\n  //       try {\n  //         const config = {\n  //           headers: {\n  //             \"Content-Type\": \"application/json\"\n  //           }\n  //         };\n\n  //         const body = JSON.stringify(newUser);\n\n  //         const res = await axios.post(\"/api/users\", body, config);\n\n  //         console.log(res.data);\n  //       } catch (err) {\n  //         console.log(err.response.data);\n  //       }\n  //     }\n  //   };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger', 3000);\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  //redirect if authenticated = true\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Sign Up</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Create Your Account\n      </p>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Name'\n            name='name'\n            value={name}\n            onChange={e => onChange(e)}\n            //required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={e => onChange(e)}\n            //required\n          />\n          <small className='form-text'>\n            This site uses Gravatar so if you want a profile image, use a\n            Gravatar email\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={e => onChange(e)}\n            //minLength='6'\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Confirm Password'\n            name='password2'\n            value={password2}\n            onChange={e => onChange(e)}\n            //minLength='6'\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Register' />\n      </form>\n      <p className='my-1'>\n        Already have an account? <Link to='/login'>Sign In</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    login(email, password);\n  };\n\n  //Redirect if logged in\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Sign In</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Sign Into your Account\n      </p>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={e => onChange(e)}\n            minLength='6'\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Login' />\n      </form>\n      <p className='my-1'>\n        Don't have an account? <Link to='/register'>Sign Up</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [alerts]);\n\n  return (\n    alerts !== null &&\n    alerts.length > 0 &&\n    alerts.map(alert => (\n      <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n        {alert.msg}\n      </div>\n    ))\n  );\n};\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '40px', margin: 'auto', display: 'block' }}\n      alt='Loading...'\n    />\n  </Fragment>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst DashboardActions = () => {\n  return (\n    <div className='dash-buttons'>\n      <Link to='/edit-profile' className='btn btn-light'>\n        <i className='fas fa-user-circle text-primary'></i> Edit Profile\n      </Link>\n      <Link to='/add-experience' className='btn btn-light'>\n        <i className='fab fa-black-tie text-primary'></i> Add Experience\n      </Link>\n      <Link to='/add-education' className='btn btn-light'>\n        <i className='fas fa-graduation-cap text-primary'></i> Add Education\n      </Link>\n    </div>\n  );\n};\n\nexport default DashboardActions;\n","import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  ACCOUNT_DELETED,\n  CLEAR_PROFILE,\n  GET_REPOS\n} from './types';\n\n// Will get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({ type: CLEAR_PROFILE });\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { mssg: err.response.status.text, status: err.response.status }\n    });\n  }\n};\n\n// Get all Profiles\nexport const getProfiles = () => async dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { mssg: err.response.status.text, status: err.response.status }\n    });\n  }\n};\n\n// Get Profiles by ID\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { mssg: err.response.status.text, status: err.response.status }\n    });\n  }\n};\n\n// Get GithubRepo\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { mssg: err.response.status.text, status: err.response.status }\n    });\n  }\n};\n\n// create or update user profile\nexport const createProfile = (\n  formData,\n  history,\n  edit = false\n) => async dispatch => {\n  try {\n    //sending data\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(\n      setAlert(edit ? 'Profile Updated' : ' Profile Created', 'success')\n    );\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    console.log('err: ', err);\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        mssg: err.response.status.text,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// ADD EXPERIENCE\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    //sending data\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Experience Added', 'success'));\n\n    history.push('/dashboard');\n  } catch (err) {\n    console.log('err: ', err);\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        mssg: err.response.status.text,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n// ADD EDUCATION\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    //sending data\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Education Added', 'success'));\n\n    history.push('/dashboard');\n  } catch (err) {\n    console.log('err: ', err);\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        mssg: err.response.status.text,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//Delete Experience\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        mssg: err.response.status.text,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//Delete Education\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        mssg: err.response.status.text,\n        status: err.response.status\n      }\n    });\n  }\n};\n\n//Delete account & profile\nexport const deleteAccount = id => async dispatch => {\n  if (window.confirm('Are you sure? This can NOT be Undone!')) {\n    try {\n      await axios.delete(`/api/profile`);\n\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n\n      dispatch(setAlert('Your account has been permanantly deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          mssg: err.response.status.text,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { deleteExperience } from '../../actions/profile';\n\nconst Experience = ({ experience, deleteExperience }) => {\n  const experiences = experience.map(exp => (\n    <tr key={exp._id}>\n      <td>{exp.company}</td>\n      <td className='hide-sm'>{exp.title}</td>\n      <td>\n        <Moment format='YYYY/MM/DD'>{exp.from}</Moment> -\n        {exp.to === null ? (\n          ' Now'\n        ) : (\n          <Moment format='YYYY/MM/DD'>{exp.to}</Moment>\n        )}\n      </td>\n      <td>\n        <button\n          onClick={() => deleteExperience(exp._id)}\n          className='btn btn-danger'\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n  return (\n    <Fragment>\n      <h2 className='my-2'>Experience Credentials</h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th className='hide-sm'>Title</th>\n            <th className='hide-sm'>Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{experiences}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nExperience.propTypes = {\n  experience: PropTypes.array.isRequired,\n  deleteExperience: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteExperience })(Experience);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { deleteEducation } from '../../actions/profile';\n\nconst Education = ({ education, deleteEducation }) => {\n  const educations = education.map(edu => (\n    <tr key={edu._id}>\n      <td>{edu.school}</td>\n      <td className='hide-sm'>{edu.degree}</td>\n      <td>\n        <Moment format='YYYY/MM/DD'>{edu.from}</Moment> -\n        {edu.to === null ? (\n          ' Now'\n        ) : (\n          <Moment format='YYYY/MM/DD'>{edu.to}</Moment>\n        )}\n      </td>\n      <td>\n        <button\n          onClick={() => deleteEducation(edu._id)}\n          className='btn btn-danger'\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n  return (\n    <Fragment>\n      <h2 className='my-2'>Education Credentials</h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>School</th>\n            <th className='hide-sm'>Degree</th>\n            <th className='hide-sm'>Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{educations}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nEducation.propTypes = {\n  education: PropTypes.array.isRequired,\n  deleteEducation: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteEducation })(Education);\n","import React, { useEffect, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport Education from './Education';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile, loading }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className='large text-primary'>Dashboard</h1>\n      <p className='lead'>\n        <i className='fas fa-user'> Welcome {user && user.name}</i>\n      </p>\n      {profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n          <Experience experience={profile.experience} />\n          <Education education={profile.education} />\n\n          <div className='my-2'>\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\n              <i className='fas fa-user-minus'></i> Delete My Account\n            </button>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to='/create-profile' className='btn btn-primary my-1'>\n            Create Profile\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\n  Dashboard\n);\n","import React, { useState, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile } from '../../actions/profile';\n\nconst CreateProfile = ({ createProfile, history }) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: ''\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={e => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Pastor'>Pastor</option>\n            <option value='Software Engineer'>Software Engineer</option>\n            <option value='Lawyer'>Lawyer</option>\n            <option value='Health Care Professional'>\n              Health Care Professional\n            </option>\n            <option value='Student'>Student</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Business'>Business</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={e => onChange(e)}\n          ></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={e => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired\n};\n\n//add withRouter in order to pass history object from the action\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history\n}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: ''\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\n      githubusername:\n        loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\n      instagram: loading || !profile.social ? '' : profile.social.instagram\n    });\n  }, [loading, getCurrentProfile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={e => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Pastor'>Pastor</option>\n            <option value='Software Engineer'>Software Engineer</option>\n            <option value='Lawyer'>Lawyer</option>\n            <option value='Health Care Professional'>\n              Health Care Professional\n            </option>\n            <option value='Student'>Student</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Business'>Business</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={e => onChange(e)}\n          ></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={e => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\n//add withRouter in order to pass history object from the action\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","import React, { Fragment, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history }) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: ''\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const { company, title, location, from, to, current, description } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add An Experience</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch'></i> Add any professional experience\n        that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form\n        className='form'\n        onSubmit={e => {\n          e.preventDefault();\n          addExperience(formData, history);\n        }}\n      >\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Job Title'\n            name='title'\n            required\n            value={title}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Company'\n            name='company'\n            required\n            value={company}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              value={current}\n              onChange={() => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDateDisabled);\n              }}\n            />{' '}\n            {''} Current Job\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={e => onChange(e)}\n            disabled={toDateDisabled ? 'disabled' : ''}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Job Description'\n            value={description}\n            onChange={e => onChange(e)}\n          ></textarea>\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <a className='btn btn-light my-1' href='dashboard.html'>\n          Go Back\n        </a>\n      </form>\n    </Fragment>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addExperience })(withRouter(AddExperience));\n","import React, { Fragment, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addEducation } from '../../actions/profile';\n\nconst AddEducation = ({ addEducation, history }) => {\n  const [formData, setFormData] = useState({\n    school: '',\n    degree: '',\n    fieldofstudy: '',\n    from: '',\n    to: '',\n    current: false,\n    description: ''\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const {\n    school,\n    degree,\n    fieldofstudy,\n    from,\n    to,\n    current,\n    description\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add Your Education</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch'></i> Add any Education you have\n        attended\n      </p>\n      <small>* = required field</small>\n      <form\n        className='form'\n        onSubmit={e => {\n          e.preventDefault();\n          addEducation(formData, history);\n        }}\n      >\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* School'\n            name='school'\n            required\n            value={school}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Degree or Certificate'\n            name='degree'\n            required\n            value={degree}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Field of Study'\n            name='fieldofstudy'\n            value={fieldofstudy}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              value={current}\n              onChange={e => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDateDisabled);\n              }}\n            />{' '}\n            {''} Current School\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={e => onChange(e)}\n            disabled={toDateDisabled ? 'disabled' : ''}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Description'\n            value={description}\n            onChange={e => onChange(e)}\n          ></textarea>\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <a className='btn btn-light my-1' href='dashboard.html'>\n          Go Back\n        </a>\n      </form>\n    </Fragment>\n  );\n};\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addEducation })(withRouter(AddEducation));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nconst ProfileItem = ({\n  profile: {\n    user: { _id, name, avatar },\n    status,\n    company,\n    location,\n    skills\n  }\n}) => {\n  return (\n    <div className='profile bg-light'>\n      <img src={avatar} alt='' className='round-img' />\n      <div>\n        <h2>{name}</h2>\n        <p>\n          {status} {company && <span> at {company}</span>}\n        </p>\n        <p className='my-1'> {location && <span>{location}</span>}</p>\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\n          View Profile\n        </Link>\n      </div>\n      <ul>\n        {skills.slice(0, 4).map((skill, index) => (\n          <li key={index} className='text-primary'>\n            <i className='fas fa-check'>{skill}</i>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileItem;\n","import React, { Fragment, useEffect } from 'react';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfiles } from '../../actions/profile';\nimport ProfileItem from './ProfileItem';\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <h1 className='large text-primary'>Members</h1>\n          <p className='lead'>\n            <i className='fab fa-connectdevelop'></i> Browse and Connect with\n            Other Members\n          </p>\n          <div className='profiles'>\n            {profiles.length > 0 ? (\n              profiles.map(profile => (\n                <ProfileItem key={profile._id} profile={profile} />\n              ))\n            ) : (\n              <h4>No Profile Found</h4>\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileTop = ({\n  profile: {\n    status,\n    company,\n    location,\n    website,\n    social,\n    user: { name, avatar }\n  }\n}) => {\n  return (\n    <div className='profile-top bg-primary p-2'>\n      <img className='round-img my-1' src={avatar} alt='' />\n      <h1 className='large'>{name}</h1>\n      <p className='lead'>\n        {status} {company && <span>at {company}</span>}\n      </p>\n      <p>{location && <span>{location}</span>}</p>\n      <div className='icons my-1'>\n        {website && (\n          <a href={website} target='_blank' rel='noopener noreferrer'>\n            <i className='fas fa-globe fa-2x'></i>\n          </a>\n        )}\n        {social && social.twitter && (\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-twitter fa-2x'></i>\n          </a>\n        )}\n        {social && social.facebook && (\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-facebook fa-2x'></i>\n          </a>\n        )}\n        {social && social.linkedin && (\n          <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-linkedin fa-2x'></i>\n          </a>\n        )}\n        {social && social.youtube && (\n          <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-youtube fa-2x'></i>\n          </a>\n        )}\n        {social && social.instagram && (\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-instagram fa-2x'></i>\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileTop;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileAbout = ({\n  profile: {\n    bio,\n    skills,\n    user: { name }\n  }\n}) => {\n  return (\n    <div className='profile-about bg-light p-2'>\n      {bio && (\n        <Fragment>\n          <h2 className='text-primary'>{name.trim().split(' ')[0]}s Bio</h2>\n          <p>{bio}</p>\n          <div className='line'></div>\n        </Fragment>\n      )}\n      <h2 className='text-primary'>Skill Set</h2>\n      <div className='skills'>\n        {skills.map((skill, index) => (\n          <div key={index} className='p-1'>\n            <i className='fas fa-check'>{skill}</i>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileAbout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nconst ProfileExperience = ({\n  experience: { company, title, location, current, to, from, description }\n}) => (\n  <div>\n    <h3 className='text-dar'>{company}</h3>\n    <p>\n      <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\n      {!to ? 'Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\n    </p>\n    <p>\n      <strong>Position: </strong> {title}\n    </p>\n    <p>\n      <strong>Description: </strong> {description}\n    </p>\n  </div>\n);\n\nProfileExperience.propTypes = {\n  experience: PropTypes.array.isRequired\n};\n\nexport default ProfileExperience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nconst ProfileEducation = ({\n  education: { school, degree, fieldofstudy, current, to, from, description }\n}) => (\n  <div>\n    <h3 className='text-dar'>{school}</h3>\n    <p>\n      <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\n      {!to ? 'Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\n    </p>\n    <p>\n      <strong>Degree: </strong> {degree}\n    </p>\n    <p>\n      <strong>Field of Study: </strong> {fieldofstudy}\n    </p>\n    <p>\n      <strong>Description: </strong> {description}\n    </p>\n  </div>\n);\n\nProfileEducation.propTypes = {\n  education: PropTypes.array.isRequired\n};\n\nexport default ProfileEducation;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n\n  return (\n    <div className='profile-github'>\n      <h2 className='text-primary my-1'>Github Repos</h2>\n      {repos === null ? (\n        <Spinner></Spinner>\n      ) : (\n        repos.map(repo => (\n          <div key={repo._id} className='repo bg-white p-1 my-1'>\n            <div>\n              <h4>\n                <a\n                  href={repo.html_url}\n                  target='_blank'\n                  rel='nooponer noreferrer'\n                >\n                  {' '}\n                  {repo.name}\n                </a>\n              </h4>\n              <p>{repo.description}</p>\n            </div>\n            <div>\n              <ul>\n                <li className='badge badge-primary'>\n                  Stars: {repo.stargazers_count}\n                </li>\n                <li className='badge badge-dark'>\n                  Watchers: {repo.watchers_count}\n                </li>\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\n              </ul>\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n","import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  console.log('URL', profile);\n  return (\n    <Fragment>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to='/profiles' className='btn btn-light'>\n            Back To Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to='/edit-profile' className='btn btn-dark'>\n                Edit Profile\n              </Link>\n            )}\n          <div className='Profile-grid my-1'>\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div className='profile-exp bg-white p-2'>\n              <h2 className='text-primary'>Experience</h2>\n              {profile.experience.length > 0 ? (\n                <Fragment>\n                  {profile.experience.map(experience => (\n                    <ProfileExperience\n                      key={experience._id}\n                      experience={experience}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No Experience Credential </h4>\n              )}\n            </div>\n            <div className='profile-edu bg-white p-2'>\n              <h2 className='text-primary'>Education</h2>\n              {profile.education.length > 0 ? (\n                <Fragment>\n                  {profile.education.map(education => (\n                    <ProfileEducation\n                      key={education._id}\n                      education={education}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No Education Credential </h4>\n              )}\n            </div>\n            {profile.githubusername && (\n              <ProfileGithub username={profile.githubusername} />\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLikes, removeLikes, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  addLikes,\n  removeLikes,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions,\n}) => (\n  <Fragment>\n    <div className='post bg-white p-1 my-1'>\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className='round-img' src={avatar} alt='' />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className='my-1'>{text}</p>\n        <p className='post-date'>\n          Posted on {<Moment format='MM/DD/YYYY'>{date}</Moment>}\n        </p>\n        {showActions && (\n          <Fragment>\n            <button\n              onClick={(e) => addLikes(_id)}\n              type='button'\n              className='btn btn-light'\n            >\n              <i className='fas fa-thumbs-up'></i>{' '}\n              <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n            </button>\n            <button\n              onClick={(e) => removeLikes(_id)}\n              type='button'\n              className='btn btn-light'\n            >\n              <i className='fas fa-thumbs-down'></i>\n            </button>\n            <Link to={`/post/${_id}`} className='btn btn-primary'>\n              Discussion{' '}\n              {comments.length > 0 && (\n                <span className='comment-count'>{comments.length}</span>\n              )}\n            </Link>\n            {!auth.loading && user === auth.user._id && (\n              <button\n                onClick={(e) => deletePost(_id)}\n                type='button'\n                className='btn btn-danger'\n              >\n                <i className='fas fa-times'></i>\n              </button>\n            )}\n          </Fragment>\n        )}\n      </div>\n    </div>\n  </Fragment>\n);\n\nPostItem.defaultProps = {\n  showActions: true,\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLikes: PropTypes.func.isRequired,\n  removeLikes: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLikes, removeLikes, deletePost })(\n  PostItem\n);\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  POST_ERROR,\n  GET_POSTS,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from './types';\n\n//Get posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/posts');\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add Like\nexport const addLikes = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Remove Like\nexport const removeLikes = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete Post\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add Post\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    header: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.post('/api/posts/', formData, config);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Get post\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add Comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n  const config = {\n    header: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Remove Comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  console.log('post ID', postId);\n  try {\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId,\n    });\n\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\n\nconst PostForm = ({ addPost }) => {\n  const [text, setText] = useState('');\n  return (\n    <div className='post-form'>\n      <div className='bg-primary p'>\n        <h3>Say Something...</h3>\n      </div>\n      <form\n        className='form my-1'\n        onSubmit={(e) => {\n          e.preventDefault();\n          addPost({ text });\n          setText('');\n        }}\n      >\n        <textarea\n          name='text'\n          cols='30'\n          rows='5'\n          placeholder='Create a post'\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          required\n        ></textarea>\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\n      </form>\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addPost })(PostForm);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport { getPosts } from '../../actions/post';\nimport PostForm from './PostForm';\n\nconst Posts = ({ getPosts, post: { posts, post, loading } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return loading ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className='text-primary'>Posts</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Welcome to the Comunity\n      </p>\n      <PostForm />\n      <div className='posts'>\n        {posts.map((post) => (\n          <PostItem key={post._id} post={post} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);\n","import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addComment } from '../../actions/post';\n\nconst CommentForm = ({ postId, addComment }) => {\n  const [text, setText] = useState('');\n  return (\n    <Fragment>\n      <div className='post-form'>\n        <div className='bg-primary p'>\n          <h3>Leave a Comment</h3>\n        </div>\n        <form\n          className='form my-1'\n          onSubmit={(e) => {\n            e.preventDefault();\n            addComment(postId, { text });\n            setText('');\n          }}\n        >\n          <textarea\n            name='text'\n            cols='30'\n            rows='5'\n            placeholder='Create a post'\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            required\n          ></textarea>\n          <input type='submit' className='btn btn-dark my-1' value='Submit' />\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addComment })(CommentForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteComment } from '../../actions/post';\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment,\n}) => (\n  <div className='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className='my-1'>{text}</p>\n      <p className='post-date'>\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n      </p>\n      {!auth.loading && user === auth.user._id && (\n        <button\n          onClick={(e) => deleteComment(postId, _id)}\n          type='button'\n          className='btn btn-danger'\n        >\n          <i className='fas fa-times'></i>\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n","import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\nimport { getPost } from '../../actions/post';\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost, match.params.id]);\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to='/posts' className='btn'>\n        Back to Posts\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n      <div className='comments'>\n        {post.comments.map((comment) => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated && !loading ? (\n        <Redirect to='/login' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'), // Store Token in localstorage. We access local storage using vanilla js and getting item token\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  UPDATE_PROFILE,\n  GET_PROFILES,\n  GET_REPOS\n} from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n        // profile: null\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false,\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false,\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            (comment) => comment._id !== payload\n          ),\n        },\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\nimport post from './post';\n\nexport default combineReducers({\n  alert,\n  auth,\n  profile,\n  post\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\n//Creating Store\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Alert from './components/layout/Alert';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateProfile from './components/profile-forms/CreateProfile';\nimport EditProfile from './components/profile-forms/EditProfile';\nimport AddExperience from './components/profile-forms/AddExperience';\nimport AddEducation from './components/profile-forms/AddEducation';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport Posts from './components/posts/Posts';\nimport Post from './components/post/Post';\nimport PrivateRoute from './components/routing/PrivateRoute';\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path='/' component={Landing} />\n          <section className='container'>\n            <Alert />\n            <Switch>\n              <Route exact path='/register' component={Register} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/profiles' component={Profiles} />\n              <Route exact path='/profile/:id' component={Profile} />\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\n              <PrivateRoute\n                exact\n                path='/create-profile'\n                component={CreateProfile}\n              />\n              <PrivateRoute\n                exact\n                path='/edit-profile'\n                component={EditProfile}\n              />\n              <PrivateRoute\n                exact\n                path='/add-experience'\n                component={AddExperience}\n              />\n              <PrivateRoute\n                exact\n                path='/add-education'\n                component={AddEducation}\n              />\n              <PrivateRoute exact path='/posts' component={Posts} />\n              <PrivateRoute exact path='/post/:id' component={Post} />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}